openapi: 3.0.3
info:
  title: TrainYourBrain
  description: TYB reference for developers
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/
    description: Inferred Url
tags:
  - name: TrainYourBrainInterface
    description: Servizi di TYB
paths:
  /manage-user/create:
    post:
      tags:
        - User
      summary: >-
        Permette di creare un nuovo utente
      operationId: createUserUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /manage-user/user:
    post:
      tags:
        - User
      summary: "POST api/manage-user/user"
      operationId: "getUserByUsername"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserType"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultUserResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /auth/login:
    post:
      tags:
        - Auth
      summary: "POST api/auth/login"
      operationId: "login"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  userData:
                    $ref: "#/components/schemas/UserType"
        "404":
          description: Not Found
          content:
            application/json:
              schema: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema: {}
  /quiz/{topic}:
    get:
      tags:
        - Quiz
      summary: >-
        Permette di recuperare le domanda per uno specifico topic
      operationId: getQuizUsingGet
      parameters:
        - name: topic
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuizResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /quiz/{quizId}/{questionId}/{answerId}:
    get:
      tags:
        - Quiz
      summary: >-
        Permette di controllare le risposte
      operationId: checkAnswerUsingGet
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: string
        - name: questionId
          in: path
          required: true
          schema:
            type: string
        - name: answerId
          in: path
          required: true
          schema:
            type: number
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /quiz/results/{userId}:
    get:
      tags:
        - Quiz
      summary: >-
        Recupera i risultati per un determinato userID
      operationId: getQuizResultsByUserId
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuizResultsByUserIdResponse"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /quiz/saveQuiz:
    post:
      tags:
        - Quiz
      summary: >-
        Permette di controllare le risposte
      operationId: saveQuizUsingPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserQuizResultType"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
  /quiz/create:
    post:
      tags:
        - Quiz
      summary: >-
        Permette di inserire un quiz con delle domande
      operationId: createQuizUsingPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                topic:
                  type: string
                  description: L'argomento principale del quiz
                topicDescription:
                  type: string
                  description: Una descrizione dell'argomento
                questions:
                  type: array
                  items:
                    $ref: '#/components/schemas/QuestionType'
                imageFile:
                  type: string
                  format: base64
                  description: Il file multimediale da caricare
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EsitoType"
components:
  schemas:
    UserType:
      type: object
      required:
        - username
        - password
        - role
      properties:
        username:
          type: string
        password:
          type: string
        name:
          type: string
        surname:
          type: string
        role:
          type: string
        email:
          type: string
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
    ResultUserResponse:
      type: object
      required:
        - esito
        - result
      properties:
        esito:
          $ref: "#/components/schemas/EsitoType"
        result:
          $ref: "#/components/schemas/UserType"
    EsitoType:
      type: object
      required:
        - codice
        - descrizione
      properties:
        esito:
          type: string
        descrizione:
          type: string
    QuizResponse:
      type: object
      required:
        - esito
        - result
      properties:
        esito:
          $ref: "#/components/schemas/EsitoType"
        result:
          type: array
          items:
            $ref: "#/components/schemas/QuizDto"
    QuizDto:
      type: object
      properties:
        questions:
          items:
            $ref: "#/components/schemas/QuestionType"
        topic:
          type: string
        id:
          type: string
        topicDescription:
          type: string
        imageFile:
          type: string
          format: base64
      required:
        - questions
        - topic
        - topicDescription
    QuestionType:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        answers:
          type: array
          items:
            properties:
              description:
                type: string
              isCorrect:
                type: boolean
            required:
              - id
              - description
              - isCorrect
      required:
        - topic
        - description
        - answers
    UserQuizResultType:
      type: object
      properties:
        userId:
          type: string
        topic:
          type: string
        totalScore:
          type: number
        date:
          type: string
      required:
        - userId
        - topic
        - totalScore
    QuizResultsByUserIdResponse:
      type: object
      properties:
        esito:
          $ref: "#/components/schemas/EsitoType"
        result:
          type: array
          items:
            $ref: "#/components/schemas/UserQuizResultType"








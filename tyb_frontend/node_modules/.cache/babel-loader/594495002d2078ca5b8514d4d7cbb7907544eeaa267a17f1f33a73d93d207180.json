{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gcontini2\\\\IntellijPrj\\\\Poliba\\\\TrainYourBrain\\\\tyb_frontend\\\\src\\\\components\\\\LoginComponent\\\\LoginComponent.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport React from \"react\";\nimport { handleFieldChange } from \"../../utils/commonFunctions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const initialLoginState = {\n    userId: \"\",\n    password: \"\",\n    isLogged: false\n  };\n  const [loginState, setLoginState] = useState(initialLoginState);\n  function loginFunction() {\n    if (loginState.userId === \"Giorgio\") {\n      setLoginState({\n        ...loginState,\n        isLogged: true\n      });\n      //passiamo sulla pagina welcome e inviamo un param\n      navigate(`/welcome/${loginState.userId}`); //ALT + 0096 (APICE SINGOLO)\n    } else {\n      setLoginState({\n        ...loginState,\n        isLogged: false\n      });\n    }\n  }\n  const handleLoginFieldsChange = e => {\n    handleFieldChange(loginState, setLoginState, e);\n  };\n  function ConnexMsg(props) {\n    if (props.isLogged) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connessione eseguita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connessione NON eseguita\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Nome utente: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"userId\",\n      value: loginState.userId,\n      onChange: handleLoginFieldsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 22\n    }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: loginState.password,\n      onChange: handleLoginFieldsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: loginFunction,\n      children: \" Accedi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ConnexMsg, {\n      isLogged: loginState.isLogged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this);\n};\n_s(LoginComponent, \"1SHg0CDS/q3/thvhjz20OjjnmkE=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["useState","useNavigate","React","handleFieldChange","jsxDEV","_jsxDEV","LoginComponent","_s","navigate","initialLoginState","userId","password","isLogged","loginState","setLoginState","loginFunction","handleLoginFieldsChange","e","ConnexMsg","props","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gcontini2/IntellijPrj/Poliba/TrainYourBrain/tyb_frontend/src/components/LoginComponent/LoginComponent.tsx"],"sourcesContent":["import {useState} from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {handleFieldChange} from \"../../utils/commonFunctions\";\r\n\r\n const LoginComponent =()=> {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const initialLoginState = {\r\n        userId: \"\",\r\n        password: \"\",\r\n        isLogged: false\r\n    }\r\n    const [loginState, setLoginState] = useState(initialLoginState);\r\n\r\n\r\n    function loginFunction() {\r\n\r\n        if (loginState.userId === \"Giorgio\") {\r\n            setLoginState({...loginState, isLogged: true});\r\n            //passiamo sulla pagina welcome e inviamo un param\r\n            navigate(`/welcome/${loginState.userId}`); //ALT + 0096 (APICE SINGOLO)\r\n        } else {\r\n            setLoginState({...loginState, isLogged: false})\r\n        }\r\n    }\r\n\r\n    const handleLoginFieldsChange = (e: { target: { name: string | number; value: any; }; }) => {\r\n        handleFieldChange(loginState, setLoginState, e);\r\n    }\r\n\r\n    function ConnexMsg(props: { isLogged: any; }) {\r\n        if (props.isLogged) {\r\n            return <div><h3>Connessione eseguita</h3></div>\r\n        } else {\r\n            return <div><h3>Connessione NON eseguita</h3></div>\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        Nome utente: <input type=\"text\" name=\"userId\" value={loginState.userId} onChange={handleLoginFieldsChange}/>\r\n        Password: <input type=\"password\" name=\"password\" value={loginState.password}\r\n                         onChange={handleLoginFieldsChange}/>\r\n        <button className=\"btn btn-primary\" onClick={loginFunction}> Accedi</button>\r\n        <ConnexMsg isLogged={loginState.isLogged}></ConnexMsg>\r\n    </div>)\r\n}\r\n\r\nexport default LoginComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}